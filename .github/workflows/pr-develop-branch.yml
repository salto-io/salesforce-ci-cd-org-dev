name: Validate PR on develop branch
'on':
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - development
    paths:
      - force-app/**
jobs:
  validate-deployment-on-develop-org:
    runs-on: ubuntu-latest
    if: '${{ github.actor != ''dependabot[bot]'' }}'
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Read PR Body
        env:
          PR_BODY: '${{github.event.pull_request.body}}'
        run: |
          echo $PR_BODY > ./pr_body.txt
          node ./parsePR.js              
          TESTS=$(cat testsToRun.txt)       
          echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV
      - name: Install Salesforce CLI
        run: >
          wget
          https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz

          mkdir ~/sfdx

          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1

          echo "$HOME/sfdx/bin" >> $GITHUB_PATH

          ~/sfdx/bin/sfdx version
      - name: Installing sfdx git delta
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins 
      - name: Installing java
        run: |
          sudo apt-get update
          sudo apt install default-jdk
      - name: Installing SFDX scanner
        run: 'sfdx plugins:install @salesforce/sfdx-scanner'
      - name: Install the JEST Plugin
        run: npm install @salesforce/sfdx-lwc-jest --save-dev
      - name: Populate auth file with SFDX_URL secret of integration org
        shell: bash
        run: |
          echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt
      - name: Authenticate to Integration Org
        run: >-
          sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a
          integration
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: >
          mkdir changed-sources

          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output
          changed-sources/ --generate-delta --source force-app/ 
      - name: Scan code
        run: >
          cd changed-sources

          sfdx scanner:run --format sarif --target './**/*.cls' --category
          "Design,Best Practices,Performance" --outfile
          'apexScanResults.sarif'  

          cd ..
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: changed-sources/apexScanResults.sarif
      - name: Check-only deploy delta changes - run specified tests
        if: '${{ env.APEX_TESTS != ''all'' }}'
        run: >
          echo ${{env.APEX_TESTS}}

          sfdx force:source:deploy -p "changed-sources/force-app" --checkonly
          --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS}} --json
      - name: Check-only deploy delta changes - run all tests
        if: '${{ env.APEX_TESTS == ''all'' }}'
        run: >
          sfdx force:source:deploy -p "changed-sources/force-app" --checkonly
          --testlevel RunLocalTests  --json
      - name: Deploy destructive changes (if any)
        run: >-
          sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges"
          --checkonly --ignorewarnings
      - name: Run the Jest coverage script
        if: github.event.pull_request.merged == true
        run: |
          npm run test:unit:coverage
          echo "Run the Jest coverage script"
